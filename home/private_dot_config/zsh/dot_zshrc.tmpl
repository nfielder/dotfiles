#!/usr/bin/env zsh

# Lines configured by zsh-newuser-install
setopt autocd nomatch
bindkey -v
# End of lines configured by zsh-newuser-install

# Manually added lines
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# History settings. Run `man zshoptions` for more information.
# Save timestamp and duration of command
setopt extended_history
# Delete duplicates first when HISTFILE exceeds HISTSIZE
setopt hist_expire_dups_first
# Ignore dupes in .zhistory
setopt hist_ignore_dups
# Ignore commands that start with a space
setopt hist_ignore_space
# Remove the 'history (fc -l)' command from the history list when invoked
setopt hist_no_store
# Show command with history expansion to user before running it
setopt hist_verify
# Share command history data
setopt share_history

# Turn off annoying beeping
setopt nobeep

# Suggest similar command if mistyped
setopt correct

# Add custom completions to fpath
if [ -d "$ZDOTDIR/completions" ] ; then
    fpath=("$ZDOTDIR/completions" "$fpath[@]")
fi

# Add custom prompts to fpath
if [ -d "$ZDOTDIR/prompts" ] ; then
    fpath=("$ZDOTDIR/prompts" "$fpath[@]")
fi

# Vi bindings for tab completion menu
zmodload zsh/complist
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# Configure compinit
autoload -Uz compinit
compinit

if [ -f "$ZDOTDIR/plugins/completion.zsh" ] ; then
    source "$ZDOTDIR/plugins/completion.zsh";
fi

if [ -f "$ZDOTDIR/plugins/zhooks.plugin.zsh" ] ; then
    source "$ZDOTDIR/plugins/zhooks.plugin.zsh";
fi

# vim plugin
if [ -f "$ZDOTDIR/plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh" ] ; then
    function zvm_config() {
        ZVM_VI_SURROUND_BINDKEY='s-prefix'
    }

    # Keybindings conflicted with FZF shell integration. This ensures that we source
    # FZF integration *after* zsh vim mode is loaded.
    function zvm_custom_init() {
        # Enable fzf integration if installed
        if command -v fzf &> /dev/null; then
            source <(fzf --zsh)
        fi

        # Add autosuggestions bindings
        if [ -f "$ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" ] ; then
            autosuggestion_keybindings
        fi
    }
    zvm_after_init_commands+=(zvm_custom_init)

    source "$ZDOTDIR/plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh";
fi

# Add autosuggestions
if [ -f "$ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" ] ; then
    function autosuggestion_keybindings() {
        # Accept suggestion with CTRL+Y
        bindkey '^y' autosuggest-accept
        # Toggle enabling suggestions with CTRL+Space
        bindkey '^ ' autosuggest-toggle
    }

    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#585858"
    source "$ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
    autosuggestion_keybindings
fi

{{- if eq .hostname "zion" }}

# nvm
if [ -f "$ZDOTDIR/plugins/zsh-nvm/zsh-nvm.plugin.zsh" ] ; then
    NVM_DIR="$XDG_CONFIG_HOME/nvm"
    NVM_COMPLETION=true
    source "$ZDOTDIR/plugins/zsh-nvm/zsh-nvm.plugin.zsh";
fi
{{- end }}

# Configure prompt
autoload -Uz promptinit
promptinit

# This will set the default prompt to the quivical theme
prompt quivical

# Load aliases and any machine specific extras
for file in "$ZDOTDIR"/.zsh_{aliases,funcs,extra}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;

# For enabling git signing
export GPG_TTY=$(tty)

{{- if lookPath "asdf" }}

# asdf go plugin integration
# TODO: add a way to skip loading this file (probably via an env var) for the
# scenario when I don't want to have asdf hijack the GOPATH, GOBIN etc.

local asdf_golang_plugin_file="${ASDF_DATA_DIR:-$HOME/.asdf}/plugins/golang/set-env.zsh"
if [ -f "$asdf_golang_plugin_file" ]; then
    . ${asdf_golang_plugin_file}
fi
{{- end }}

# Add syntax highlighting
if [ -f "$ZDOTDIR/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ] ; then
    source "$ZDOTDIR/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh";
fi
